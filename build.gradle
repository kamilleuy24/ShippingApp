plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'com.kamille.gcash'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.drools:drools-core:9.44.0.Final'
	implementation 'org.drools:drools-compiler:9.44.0.Final'
	implementation 'org.drools:drools-mvel:9.44.0.Final'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
	swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.52'
}

swaggerSources {
	testName {
		inputFile = file("$rootDir/voucher-api-doc/voucher-api.yaml")
		code {
			language = 'java'
			library = 'resttemplate'
			outputDir = file("$rootDir/generated")
			additionalProperties = [
					"interfaceOnly":true,
					"hideGenerationTimestamp": true,
					"jakarta":true,
					"useBeanValidation":true,
					"dateLibrary": "java8",
					"java21":true
			]
		}
	}
}

compileJava.dependsOn(swaggerSources.testName.code)

sourceSets {
	main {
		java.srcDir("${swaggerSources.testName.code.outputDir}/src/main/java")
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
